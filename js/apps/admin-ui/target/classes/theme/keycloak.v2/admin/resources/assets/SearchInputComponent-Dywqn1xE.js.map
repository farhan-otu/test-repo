{"version":3,"file":"SearchInputComponent-Dywqn1xE.js","sources":["../../../../../../../src/components/dynamic/CheckboxFilterComponent.tsx","../../../../../../../src/components/dynamic/SearchInputComponent.tsx"],"sourcesContent":["import {\n  Badge,\n  MenuToggle,\n  Select,\n  SelectList,\n  SelectOption,\n} from \"@patternfly/react-core\";\n\ntype CheckboxFilterOptions = {\n  value: string;\n  label: string;\n};\n\ntype CheckboxFilterComponentProps = {\n  filterPlaceholderText: string;\n  isOpen: boolean;\n  options: CheckboxFilterOptions[];\n  onOpenChange: (isOpen: boolean) => void;\n  onToggleClick: () => void;\n  onSelect: (\n    event: React.MouseEvent<HTMLButtonElement>,\n    selection: string,\n  ) => void;\n  selectedItems: string[];\n  width?: string;\n};\n\nexport const CheckboxFilterComponent = ({\n  filterPlaceholderText,\n  isOpen,\n  options,\n  onOpenChange,\n  onToggleClick,\n  onSelect,\n  selectedItems,\n  width,\n}: CheckboxFilterComponentProps) => {\n  const toggle = (toggleRef: React.RefObject<HTMLButtonElement>) => (\n    <MenuToggle\n      ref={toggleRef}\n      onClick={onToggleClick}\n      isExpanded={isOpen}\n      style={{\n        width,\n      }}\n    >\n      {filterPlaceholderText}\n      {selectedItems.length > 0 && (\n        <Badge isRead className=\"pf-v5-u-m-xs\">\n          {selectedItems.length}\n        </Badge>\n      )}\n    </MenuToggle>\n  );\n\n  return (\n    <Select\n      role=\"menu\"\n      id=\"checkbox-select\"\n      isOpen={isOpen}\n      selected={selectedItems}\n      onSelect={(event, value) => {\n        onSelect(event as React.MouseEvent<HTMLButtonElement>, value as string);\n      }}\n      onOpenChange={onOpenChange}\n      toggle={toggle}\n      data-testid=\"checkbox-filter-select\"\n    >\n      <SelectList>\n        {options.map((option) => (\n          <SelectOption\n            key={option.value}\n            hasCheckbox\n            value={option.value}\n            isSelected={selectedItems.includes(option.value)}\n            data-testid={`checkbox-filter-option-${option.value}`}\n          >\n            {option.label}\n          </SelectOption>\n        ))}\n      </SelectList>\n    </Select>\n  );\n};\n","import {\n  Button,\n  TextInputGroup,\n  TextInputGroupMain,\n  TextInputGroupUtilities,\n} from \"@patternfly/react-core\";\nimport { ArrowRightIcon, SearchIcon, TimesIcon } from \"@patternfly/react-icons\";\nimport { useTranslation } from \"react-i18next\";\n\ntype SearchInputComponentProps = {\n  value: string;\n  onChange: (value: string) => void;\n  onSearch: (value: string) => void;\n  onClear: () => void;\n  placeholder?: string;\n  \"aria-label\"?: string;\n};\n\nexport const SearchInputComponent = ({\n  value,\n  onChange,\n  onSearch,\n  onClear,\n  placeholder,\n  \"aria-label\": ariaLabel,\n}: SearchInputComponentProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <TextInputGroup>\n        <TextInputGroupMain\n          icon={<SearchIcon />}\n          value={value}\n          onChange={(event: React.FormEvent<HTMLInputElement>) =>\n            onChange(event.currentTarget.value)\n          }\n          placeholder={placeholder}\n          aria-label={ariaLabel}\n          data-testid=\"search-input\"\n        />\n        <TextInputGroupUtilities style={{ marginInline: \"0px\" }}>\n          {value && (\n            <Button\n              variant=\"plain\"\n              onClick={onClear}\n              aria-label={t(\"clear\")}\n              data-testid=\"clear-search\"\n              icon={<TimesIcon />}\n            />\n          )}\n        </TextInputGroupUtilities>\n      </TextInputGroup>\n      <Button\n        icon={<ArrowRightIcon />}\n        variant=\"control\"\n        style={{ marginLeft: \"0.1rem\" }}\n        onClick={() => onSearch(value)}\n        aria-label={t(\"search\")}\n        data-testid=\"search\"\n      />\n    </>\n  );\n};\n"],"names":["CheckboxFilterComponent","filterPlaceholderText","isOpen","options","onOpenChange","onToggleClick","onSelect","selectedItems","width","jsx","Select","event","value","toggleRef","jsxs","MenuToggle","Badge","SelectList","option","SelectOption","SearchInputComponent","onChange","onSearch","onClear","placeholder","ariaLabel","useTranslation","Fragment","TextInputGroup","TextInputGroupMain","SearchIcon","TextInputGroupUtilities","Button","TimesIcon","ArrowRightIcon"],"mappings":"sMA2BO,MAAMA,EAA0B,CAAC,CACtC,sBAAAC,EACA,OAAAC,EACA,QAAAC,EACA,aAAAC,EACA,cAAAC,EACA,SAAAC,EACA,cAAAC,EACA,MAAAC,CACF,IAoBIC,EAACC,EAAA,CACC,KAAK,OACL,GAAG,kBACH,OAAAR,EACA,SAAUK,EACV,SAAU,CAACI,EAAOC,IAAU,CAC1BN,EAASK,EAA8CC,CAAe,CACxE,EACA,aAAAR,EACA,OA5BYS,GACdC,EAACC,EAAA,CACC,IAAKF,EACL,QAASR,EACT,WAAYH,EACZ,MAAO,CACL,MAAAM,CACF,EAEC,SAAA,CAAAP,EACAM,EAAc,OAAS,GACrBE,EAAAO,EAAA,CAAM,OAAM,GAAC,UAAU,eACrB,SAAAT,EAAc,MACjB,CAAA,CAAA,CAAA,CAEJ,EAcE,cAAY,yBAEZ,SAACE,EAAAQ,EAAA,CACE,SAAQd,EAAA,IAAKe,GACZT,EAACU,EAAA,CAEC,YAAW,GACX,MAAOD,EAAO,MACd,WAAYX,EAAc,SAASW,EAAO,KAAK,EAC/C,cAAa,0BAA0BA,EAAO,KAAK,GAElD,SAAOA,EAAA,KAAA,EANHA,EAAO,KAAA,CAQf,CACH,CAAA,CAAA,CACF,EC/DSE,EAAuB,CAAC,CACnC,MAAAR,EACA,SAAAS,EACA,SAAAC,EACA,QAAAC,EACA,YAAAC,EACA,aAAcC,CAChB,IAAiC,CACzB,KAAA,CAAE,CAAE,EAAIC,EAAe,EAE7B,OAEIZ,EAAAa,EAAA,CAAA,SAAA,CAAAb,EAACc,EACC,CAAA,SAAA,CAAAnB,EAACoB,EAAA,CACC,OAAOC,EAAW,EAAA,EAClB,MAAAlB,EACA,SAAWD,GACTU,EAASV,EAAM,cAAc,KAAK,EAEpC,YAAAa,EACA,aAAYC,EACZ,cAAY,cAAA,CACd,IACCM,EAAwB,CAAA,MAAO,CAAE,aAAc,OAC7C,SACCnB,GAAAH,EAACuB,EAAA,CACC,QAAQ,QACR,QAAST,EACT,aAAY,EAAE,OAAO,EACrB,cAAY,eACZ,OAAOU,EAAU,CAAA,CAAA,CAAA,CAAA,CAGvB,CAAA,CAAA,EACF,EACAxB,EAACuB,EAAA,CACC,OAAOE,EAAe,EAAA,EACtB,QAAQ,UACR,MAAO,CAAE,WAAY,QAAS,EAC9B,QAAS,IAAMZ,EAASV,CAAK,EAC7B,aAAY,EAAE,QAAQ,EACtB,cAAY,QAAA,CAAA,CACd,EACF,CAEJ"}