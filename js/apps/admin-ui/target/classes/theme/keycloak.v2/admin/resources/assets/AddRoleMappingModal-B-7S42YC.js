import{jsxs as B,Fragment as x,jsx as l}from"react/jsx-runtime";import{dC as N,u as _,a as q,V as J,B as X,q as Y,w as W,T as K,cW as Z,f as D,bx as H,cP as ee,by as te,h as Q,cK as se,b$ as ne,M as ie,m as le,bm as oe,ah as ae,bn as re,D as ce,cp as de}from"./main-hjbDDO6j.js";import{useState as R}from"react";import{t as z}from"./translationFormatter-aKDacg4X.js";import{u as pe}from"./useLocaleSort-Bon3wgU4.js";import{u as me}from"./ConfirmDialog-DN_NVsrg.js";import{F as ge}from"./filter-icon-I49U7vdU.js";const U={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},j={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listCompositeRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},F={groups:U,users:U,clientScopes:j,clients:j,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},fe=(t,e)=>t[e],M=(t,e,n,...i)=>fe(t,e)[n](...i),ue=(t,e,n,i)=>i.map(o=>{const c={id:o.role.id,name:o.role.name},s=F[e]?.delete[o.client?0:1];return M(t,e,s,{id:n,clientUniqueId:o.client?.id,client:o.client?.id,roles:[c]},[c])}),Re=async(t,e,n)=>{const i=F[e].listEffective[0],o=M(t,e,i,{id:n});if(e!=="roles")return o;const c=await o;return{clientMappings:await Promise.all(c.filter(g=>g.clientRole).map(async g=>{const d=await t.clients.findOne({id:g.containerId});return g.containerId=d?.clientId,{...d,mappings:[g]}})),realmMappings:c.filter(g=>!g.clientRole)}},he=async(t,e,n)=>{const i=F[e].listEffective[1];if(e!=="roles")return(await M(t,e,i,{id:n})).map(s=>({role:s}));const o=await M(t,e,i,{id:n}),c=await Promise.all(o.filter(s=>s.composite).map(s=>M(t,e,i,{id:s.id})));return[...o,...c.flat()].map(s=>({role:s}))},ye=async(t,e,n)=>{const i=F[e].listAvailable[1];return(await M(t,e,i,n)).map(o=>({role:o}))},L=async(t,{id:e,type:n,first:i,max:o,search:c,endpoint:s})=>N(t,`/ui-ext/${s}/${n}/${e}`,{first:(i||0).toString(),max:(o||10).toString(),search:c||""}),Ce=(t,e)=>L(t,{...e,endpoint:"available-roles"}),ve=(t,e)=>L(t,{...e,endpoint:"effective-roles"}),Ke=(t,e)=>N(t,"ui-ext/brute-force-user",e),De=(t,e)=>L(t,{...e,endpoint:"authentication-management"}),Ae=(t,e,n)=>[...n?t.map(i=>({...i,role:{...i.role,isInherited:!1}})):e.map(i=>({...i,role:{...i.role,isInherited:t.find(o=>o.role.id===i.role.id)===void 0}}))],G=({role:t,client:e})=>B(x,{children:[e?.clientId&&l(se,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:e.clientId}),t.name]}),Fe=({name:t,id:e,type:n,isManager:i=!0,save:o})=>{const{adminClient:c}=_(),{t:s}=q(),{addAlert:g,addError:d}=J(),[b,E]=R(0),u=()=>E(b+1),[h,f]=R(!0),[k,v]=R(!1),[S,y]=R([]),$=async r=>{await o(r),u()},T=async()=>{let r=[],C=[];h||(r=await he(c,n,e),C=(await ve(c,{type:n,id:e})).map(a=>({client:{clientId:a.client,id:a.clientId},role:{id:a.id,name:a.role,description:a.description}})),r=r.filter(a=>!C.some(m=>m.role.id===a.role.id)));const p=await Re(c,n,e),w=p.realmMappings?.map(a=>({role:a}))||[],A=Object.values(p.clientMappings||{}).map(a=>a.mappings.map(m=>({client:{clientId:a.client,...a},role:m}))).flat();return[...Ae([...A,...w],[...C,...r],h)]},[I,P]=me({titleKey:"removeMappingTitle",messageKey:s("removeMappingConfirm",{count:S.length}),continueButtonLabel:"remove",continueButtonVariant:X.danger,onCancel:()=>{y([]),u()},onConfirm:async()=>{try{await Promise.all(ue(c,n,e,S)),g(s("clientScopeRemoveSuccess"),Y.success),y([]),u()}catch(r){d("clientScopeRemoveError",r)}}});return B(x,{children:[k&&l(be,{id:e,type:n,name:t,onAssign:$,onClose:()=>v(!1)}),l(P,{}),l(W,{"data-testid":"assigned-roles",loader:T,canSelectAll:!0,onSelect:r=>y(r),searchPlaceholderKey:"searchByName",ariaLabelKey:"clientScopeList",isRowDisabled:r=>r.role.isInherited||!1,toolbarItem:B(x,{children:[l(K,{children:l(Z,{label:s("hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:h,onChange:(r,C)=>{f(C),u()}})}),i&&B(x,{children:[l(K,{children:l(D,{"data-testid":"assignRole",onClick:()=>v(!0),children:s("assignRole")})}),l(K,{children:l(D,{variant:"link","data-testid":"unAssignRole",onClick:I,isDisabled:S.length===0,children:s("unAssignRole")})})]})]}),actions:i?[{title:s("unAssignRole"),onRowClick:async r=>(y([r]),I(),!1)}]:[],columns:[{name:"role.name",displayKey:"name",transforms:[H(30)],cellRenderer:G},{name:"role.isInherited",displayKey:"inherent",cellFormatters:[ee(),te()]},{name:"role.description",displayKey:"description",cellFormatters:[z(s)]}],emptyState:l(Q,{message:s(`noRoles-${n}`),instructions:s(`noRolesInstructions-${n}`),primaryActionText:s("assignRole"),onPrimaryAction:()=>v(!0),secondaryActions:[{text:s("showInheritedRoles"),onClick:()=>{f(!1),u()}}]})},`${e}${b}`)]})},Me=({role:t})=>{const{t:e}=q();return l(de,{wrapModifier:"truncate",children:z(e)(t.description)})},be=({id:t,name:e,type:n,isRadio:i=!1,isLDAPmapper:o,onAssign:c,onClose:s})=>{const{adminClient:g}=_(),{t:d}=q(),{hasAccess:b}=ne(),E=b("view-realm")||b("query-users"),[u,h]=R(!1),[f,k]=R("clients"),[v,S]=R([]),[y,$]=R(0),T=()=>$(y+1),I=pe(),P=({role:{name:p}})=>p?.toUpperCase(),r=async(p,w,A)=>{const a={first:p,max:w};A&&(a.search=A);const m=await ye(g,n,{...a,id:t});return I(m,P).map(O=>({role:O.role,id:O.role.id}))},C=async(p,w,A)=>{const a=await Ce(g,{id:t,type:n,first:p||0,max:w||10,search:A});return I(a.map(m=>({client:{clientId:m.client,id:m.clientId},role:{id:m.id,name:m.role,description:m.description},id:m.id})),({client:{clientId:m},role:{name:V}})=>`${m}${V}`)};return l(ie,{variant:le.large,title:o?d("assignRole"):d("assignRolesTo",{client:e}),isOpen:!0,onClose:s,actions:[l(D,{"data-testid":"assign",isDisabled:v.length===0,variant:"primary",onClick:()=>{c(v),s()},children:d("assign")},"confirm"),l(D,{"data-testid":"cancel",variant:"link",onClick:s,children:d("cancel")},"cancel")],children:l(W,{onSelect:p=>S([...p]),searchPlaceholderKey:"searchByRoleName",isPaginated:!(f==="roles"&&n!=="roles"),searchTypeComponent:E&&l(K,{children:l(oe,{onOpenChange:p=>h(p),onSelect:()=>{k(f==="roles"?"clients":"roles"),h(!1),T()},toggle:p=>l(ae,{"data-testid":"filter-type-dropdown",ref:p,onClick:()=>h(!u),icon:l(ge,{}),children:d(f==="roles"?"filterByRoles":"filterByClients")}),isOpen:u,children:l(re,{children:l(ce,{"data-testid":f,children:d(f==="roles"?"filterByClients":"filterByRoles")},"filter-type")})})}),canSelectAll:!0,isRadio:i,loader:f==="roles"?r:C,ariaLabelKey:"roles",columns:[{name:"name",cellRenderer:G,transforms:[H(20)]},{name:"role.description",displayKey:"description",cellRenderer:Me}],emptyState:l(Q,{message:d("noRoles"),instructions:d("noRealmRolesToAssign"),secondaryActions:[{text:d("filterByClients"),onClick:()=>{k("clients"),T()}}]})},y)})};export{be as A,Fe as R,G as S,Ke as a,De as f};
//# sourceMappingURL=AddRoleMappingModal-B-7S42YC.js.map
