{"version":3,"file":"FileUploadForm-CQxs07NG.js","sources":["../../../../../../../src/components/json-file-upload/FileUploadForm.tsx"],"sourcesContent":["import { CodeEditor, Language } from \"@patternfly/react-code-editor\";\nimport {\n  Button,\n  DropEvent,\n  FileUpload,\n  FileUploadProps,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\nimport {\n  ChangeEvent,\n  DragEvent as ReactDragEvent,\n  MouseEvent as ReactMouseEvent,\n  useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\ntype FileUploadType = {\n  value: string;\n  filename: string;\n  isLoading: boolean;\n  modal: boolean;\n};\n\nexport type FileUploadEvent =\n  | ReactDragEvent<HTMLElement> // User dragged/dropped a file\n  | ChangeEvent<HTMLTextAreaElement> // User typed in the TextArea\n  | ReactMouseEvent<HTMLButtonElement, MouseEvent>; // User clicked Clear button\n\nexport type FileUploadFormProps = Omit<FileUploadProps, \"onChange\"> & {\n  id: string;\n  extension: string;\n  onChange: (value: string) => void;\n  helpText?: string;\n  unWrap?: boolean;\n  language?: Language;\n};\n\nexport const FileUploadForm = ({\n  id,\n  onChange,\n  helpText = \"helpFileUpload\",\n  unWrap = false,\n  language,\n  extension,\n  ...rest\n}: FileUploadFormProps) => {\n  const { t } = useTranslation();\n  const defaultUpload: FileUploadType = {\n    value: \"\",\n    filename: \"\",\n    isLoading: false,\n    modal: false,\n  };\n  const [fileUpload, setFileUpload] = useState<FileUploadType>(defaultUpload);\n  const removeDialog = () => setFileUpload({ ...fileUpload, modal: false });\n\n  const handleFileInputChange = (_event: DropEvent, file: File) => {\n    setFileUpload({ ...fileUpload, filename: file.name });\n  };\n\n  const handleTextOrDataChange = (value: string) => {\n    setFileUpload({ ...fileUpload, value });\n    onChange(value);\n  };\n\n  const handleClear = () => {\n    setFileUpload({ ...fileUpload, modal: true });\n  };\n\n  return (\n    <>\n      {fileUpload.modal && (\n        <Modal\n          variant={ModalVariant.small}\n          title={t(\"clearFile\")}\n          isOpen\n          onClose={removeDialog}\n          actions={[\n            <Button\n              key=\"confirm\"\n              variant=\"primary\"\n              data-testid=\"clear-button\"\n              onClick={() => {\n                setFileUpload(defaultUpload);\n                onChange(\"\");\n              }}\n            >\n              {t(\"clear\")}\n            </Button>,\n            <Button\n              data-testid=\"cancel\"\n              key=\"cancel\"\n              variant=\"link\"\n              onClick={removeDialog}\n            >\n              {t(\"cancel\")}\n            </Button>,\n          ]}\n        >\n          {t(\"clearFileExplain\")}\n        </Modal>\n      )}\n      {unWrap && (\n        <FileUpload\n          id={id}\n          {...rest}\n          type=\"text\"\n          value={fileUpload.value}\n          filename={fileUpload.filename}\n          onFileInputChange={handleFileInputChange}\n          onDataChange={(_, value) => handleTextOrDataChange(value)}\n          onTextChange={(_, value) => handleTextOrDataChange(value)}\n          onClearClick={handleClear}\n          onReadStarted={() =>\n            setFileUpload({ ...fileUpload, isLoading: true })\n          }\n          onReadFinished={() =>\n            setFileUpload({ ...fileUpload, isLoading: false })\n          }\n          isLoading={fileUpload.isLoading}\n          dropzoneProps={{\n            accept: { \"application/text\": [extension] },\n          }}\n        />\n      )}\n      {!unWrap && (\n        <FormGroup label={t(\"resourceFile\")} fieldId={id}>\n          <FileUpload\n            data-testid={id}\n            id={id}\n            {...rest}\n            type=\"text\"\n            value={fileUpload.value}\n            filename={fileUpload.filename}\n            onFileInputChange={handleFileInputChange}\n            onDataChange={(_, value) => handleTextOrDataChange(value)}\n            onTextChange={(_, value) => handleTextOrDataChange(value)}\n            onClearClick={handleClear}\n            onReadStarted={() =>\n              setFileUpload({ ...fileUpload, isLoading: true })\n            }\n            onReadFinished={() =>\n              setFileUpload({ ...fileUpload, isLoading: false })\n            }\n            isLoading={fileUpload.isLoading}\n            hideDefaultPreview\n          >\n            {!rest.hideDefaultPreview && (\n              <CodeEditor\n                isLineNumbersVisible\n                code={fileUpload.value}\n                language={language}\n                height=\"128px\"\n                onChange={handleTextOrDataChange}\n                isReadOnly={!rest.allowEditingUploadedText}\n              />\n            )}\n          </FileUpload>\n          <FormHelperText>\n            <HelperText>\n              <HelperTextItem>{t(helpText)}</HelperTextItem>\n            </HelperText>\n          </FormHelperText>\n        </FormGroup>\n      )}\n    </>\n  );\n};\n"],"names":["FileUploadForm","id","onChange","helpText","unWrap","language","extension","rest","useTranslation","defaultUpload","fileUpload","setFileUpload","useState","removeDialog","handleFileInputChange","_event","file","handleTextOrDataChange","value","handleClear","jsxs","Fragment","jsx","Modal","ModalVariant","Button","FileUpload","_","FormGroup","CodeEditor","FormHelperText","HelperText","HelperTextItem"],"mappings":"sRA0CO,MAAMA,EAAiB,CAAC,CAC7B,GAAAC,EACA,SAAAC,EACA,SAAAC,EAAW,iBACX,OAAAC,EAAS,GACT,SAAAC,EACA,UAAAC,EACA,GAAGC,CACL,IAA2B,CACnB,KAAA,CAAE,CAAE,EAAIC,EAAe,EACvBC,EAAgC,CACpC,MAAO,GACP,SAAU,GACV,UAAW,GACX,MAAO,EACT,EACM,CAACC,EAAYC,CAAa,EAAIC,EAAyBH,CAAa,EACpEI,EAAe,IAAMF,EAAc,CAAE,GAAGD,EAAY,MAAO,GAAO,EAElEI,EAAwB,CAACC,EAAmBC,IAAe,CAC/DL,EAAc,CAAE,GAAGD,EAAY,SAAUM,EAAK,KAAM,CACtD,EAEMC,EAA0BC,GAAkB,CAChDP,EAAc,CAAE,GAAGD,EAAY,MAAAQ,EAAO,EACtChB,EAASgB,CAAK,CAChB,EAEMC,EAAc,IAAM,CACxBR,EAAc,CAAE,GAAGD,EAAY,MAAO,GAAM,CAC9C,EAEA,OAEKU,EAAAC,EAAA,CAAA,SAAA,CAAAX,EAAW,OACVY,EAACC,EAAA,CACC,QAASC,EAAa,MACtB,MAAO,EAAE,WAAW,EACpB,OAAM,GACN,QAASX,EACT,QAAS,CACPS,EAACG,EAAA,CAEC,QAAQ,UACR,cAAY,eACZ,QAAS,IAAM,CACbd,EAAcF,CAAa,EAC3BP,EAAS,EAAE,CACb,EAEC,WAAE,OAAO,CAAA,EARN,SASN,EACAoB,EAACG,EAAA,CACC,cAAY,SAEZ,QAAQ,OACR,QAASZ,EAER,WAAE,QAAQ,CAAA,EAJP,QAAA,CAMR,EAEC,WAAE,kBAAkB,CAAA,CACvB,EAEDT,GACCkB,EAACI,EAAA,CACC,GAAAzB,EACC,GAAGM,EACJ,KAAK,OACL,MAAOG,EAAW,MAClB,SAAUA,EAAW,SACrB,kBAAmBI,EACnB,aAAc,CAACa,EAAGT,IAAUD,EAAuBC,CAAK,EACxD,aAAc,CAACS,EAAGT,IAAUD,EAAuBC,CAAK,EACxD,aAAcC,EACd,cAAe,IACbR,EAAc,CAAE,GAAGD,EAAY,UAAW,GAAM,EAElD,eAAgB,IACdC,EAAc,CAAE,GAAGD,EAAY,UAAW,GAAO,EAEnD,UAAWA,EAAW,UACtB,cAAe,CACb,OAAQ,CAAE,mBAAoB,CAACJ,CAAS,CAAE,CAAA,CAC5C,CACF,EAED,CAACF,GACCgB,EAAAQ,EAAA,CAAU,MAAO,EAAE,cAAc,EAAG,QAAS3B,EAC5C,SAAA,CAAAqB,EAACI,EAAA,CACC,cAAazB,EACb,GAAAA,EACC,GAAGM,EACJ,KAAK,OACL,MAAOG,EAAW,MAClB,SAAUA,EAAW,SACrB,kBAAmBI,EACnB,aAAc,CAACa,EAAGT,IAAUD,EAAuBC,CAAK,EACxD,aAAc,CAACS,EAAGT,IAAUD,EAAuBC,CAAK,EACxD,aAAcC,EACd,cAAe,IACbR,EAAc,CAAE,GAAGD,EAAY,UAAW,GAAM,EAElD,eAAgB,IACdC,EAAc,CAAE,GAAGD,EAAY,UAAW,GAAO,EAEnD,UAAWA,EAAW,UACtB,mBAAkB,GAEjB,SAAA,CAACH,EAAK,oBACLe,EAACO,EAAA,CACC,qBAAoB,GACpB,KAAMnB,EAAW,MACjB,SAAAL,EACA,OAAO,QACP,SAAUY,EACV,WAAY,CAACV,EAAK,wBAAA,CAAA,CACpB,CAEJ,EACAe,EAACQ,EACC,CAAA,SAAAR,EAACS,EACC,CAAA,SAAAT,EAACU,GAAgB,SAAE,EAAA7B,CAAQ,CAAE,CAAA,CAAA,CAC/B,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ"}