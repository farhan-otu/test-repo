{"version":3,"file":"GroupPickerDialog-CJH5Fdnt.js","sources":["../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListAction.js","../../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.8_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListCheck.js","../../../../../../../src/components/group/GroupPath.tsx","../../../../../../../src/components/group/GroupPickerDialog.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list.mjs';\nimport { formatBreakpointMods } from '../../helpers/util';\nexport const DataListAction = (_a) => {\n    var { children, className, visibility, \n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    id, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, isPlainButtonAction } = _a, props = __rest(_a, [\"children\", \"className\", \"visibility\", \"id\", 'aria-label', 'aria-labelledby', \"isPlainButtonAction\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.dataListItemAction, formatBreakpointMods(visibility, styles), className) }, props), isPlainButtonAction ? React.createElement(\"div\", { className: css(styles.dataListAction) }, children) : children));\n};\nDataListAction.displayName = 'DataListAction';\n//# sourceMappingURL=DataListAction.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/DataList/data-list.mjs';\nexport const DataListCheck = (_a) => {\n    var { className = '', \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onChange = (event, checked) => { }, isValid = true, isDisabled = false, isChecked = false, checked = false, defaultChecked, otherControls = false } = _a, props = __rest(_a, [\"className\", \"onChange\", \"isValid\", \"isDisabled\", \"isChecked\", \"checked\", \"defaultChecked\", \"otherControls\"]);\n    const check = (React.createElement(\"div\", { className: css(styles.dataListCheck) },\n        React.createElement(\"input\", Object.assign({}, props, { type: \"checkbox\", onChange: (event) => onChange(event, event.currentTarget.checked), \"aria-invalid\": !isValid, disabled: isDisabled }, ([true, false].includes(defaultChecked) && { defaultChecked }), (![true, false].includes(defaultChecked) && { checked: isChecked || checked })))));\n    return (React.createElement(React.Fragment, null,\n        !otherControls && React.createElement(\"div\", { className: css(styles.dataListItemControl, className) }, check),\n        otherControls && check));\n};\nDataListCheck.displayName = 'DataListCheck';\n//# sourceMappingURL=DataListCheck.js.map","import { useState } from \"react\";\nimport { Tooltip } from \"@patternfly/react-core\";\nimport type { TableTextProps } from \"@patternfly/react-table\";\n\nimport type GroupRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/groupRepresentation\";\n\ntype GroupPathProps = TableTextProps & {\n  group: GroupRepresentation;\n};\n\nexport const GroupPath = ({\n  group: { path },\n  onMouseEnter: onMouseEnterProp,\n  ...props\n}: GroupPathProps) => {\n  const [tooltip, setTooltip] = useState(\"\");\n  const onMouseEnter = (event: any) => {\n    setTooltip(path!);\n    onMouseEnterProp?.(event);\n  };\n  const text = (\n    <span onMouseEnter={onMouseEnter} {...props}>\n      {path}\n    </span>\n  );\n\n  return tooltip !== \"\" ? (\n    <Tooltip content={tooltip} isVisible>\n      {text}\n    </Tooltip>\n  ) : (\n    text\n  );\n};\n","import type GroupRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/groupRepresentation\";\nimport {\n  GroupQuery,\n  SubGroupQuery,\n} from \"@keycloak/keycloak-admin-client/lib/resources/groups\";\nimport {\n  ListEmptyState,\n  PaginatingTableToolbar,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  DataList,\n  DataListAction,\n  DataListCell,\n  DataListCheck,\n  DataListItem,\n  DataListItemCells,\n  DataListItemRow,\n  Modal,\n  ModalVariant,\n} from \"@patternfly/react-core\";\nimport { AngleRightIcon } from \"@patternfly/react-icons\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { GroupPath } from \"./GroupPath\";\n\nimport \"./group-picker-dialog.css\";\n\nexport type GroupPickerDialogProps = {\n  id?: string;\n  type: \"selectOne\" | \"selectMany\";\n  filterGroups?: GroupRepresentation[];\n  text: { title: string; ok: string };\n  canBrowse?: boolean;\n  isMove?: boolean;\n  onConfirm: (groups: GroupRepresentation[] | undefined) => void;\n  onClose: () => void;\n};\n\ntype SelectableGroup = GroupRepresentation & {\n  checked?: boolean;\n};\n\nexport const GroupPickerDialog = ({\n  id,\n  type,\n  filterGroups,\n  text,\n  canBrowse = true,\n  isMove = false,\n  onClose,\n  onConfirm,\n}: GroupPickerDialogProps) => {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const [selectedRows, setSelectedRows] = useState<SelectableGroup[]>([]);\n\n  const [navigation, setNavigation] = useState<SelectableGroup[]>([]);\n  const [groups, setGroups] = useState<SelectableGroup[]>([]);\n  const [filter, setFilter] = useState(\"\");\n  const [joinedGroups, setJoinedGroups] = useState<GroupRepresentation[]>([]);\n  const [groupId, setGroupId] = useState<string>();\n\n  const [max, setMax] = useState(10);\n  const [first, setFirst] = useState(0);\n\n  const [count, setCount] = useState(0);\n\n  const currentGroup = () => navigation[navigation.length - 1];\n\n  useFetch(\n    async () => {\n      let group;\n      let groups;\n      let existingUserGroups;\n\n      if (!groupId) {\n        const args: GroupQuery = {\n          first,\n          max: max + 1,\n        };\n        if (filter !== \"\") {\n          args.search = filter;\n        }\n        groups = await adminClient.groups.find(args);\n      } else {\n        if (!navigation.map(({ id }) => id).includes(groupId)) {\n          group = await adminClient.groups.findOne({ id: groupId });\n          if (!group) {\n            throw new Error(t(\"notFound\"));\n          }\n        }\n\n        const args: SubGroupQuery = {\n          first,\n          max,\n          parentId: groupId,\n        };\n        groups = await adminClient.groups.listSubGroups(args);\n      }\n\n      if (id) {\n        existingUserGroups = await adminClient.users.listGroups({\n          id,\n        });\n      }\n\n      return { group, groups, existingUserGroups };\n    },\n    async ({ group: selectedGroup, groups, existingUserGroups }) => {\n      setJoinedGroups(existingUserGroups || []);\n      if (selectedGroup) {\n        setNavigation([...navigation, selectedGroup]);\n        setCount(selectedGroup.subGroupCount!);\n      }\n\n      groups.forEach((group: SelectableGroup) => {\n        group.checked = !!selectedRows.find((r) => r.id === group.id);\n      });\n      setGroups(groups);\n      if (filter !== \"\" || !groupId) {\n        setCount(groups.length);\n      }\n    },\n    [groupId, filter, first, max],\n  );\n\n  const isRowDisabled = (row?: GroupRepresentation) => {\n    return [\n      ...joinedGroups.map((item) => item.id),\n      ...(filterGroups || []).map((group) => group.id),\n    ].some((group) => group === row?.id);\n  };\n\n  return (\n    <Modal\n      variant={filter !== \"\" ? ModalVariant.medium : ModalVariant.small}\n      title={t(text.title, {\n        group1: filterGroups?.[0]?.name,\n        group2: navigation.length ? currentGroup().name : t(\"root\"),\n      })}\n      isOpen\n      onClose={onClose}\n      actions={[\n        <Button\n          data-testid={`${text.ok}-button`}\n          key=\"confirm\"\n          variant=\"primary\"\n          form=\"group-form\"\n          onClick={() => {\n            onConfirm(\n              type === \"selectMany\"\n                ? selectedRows\n                : navigation.length\n                  ? [currentGroup()]\n                  : undefined,\n            );\n          }}\n          isDisabled={type === \"selectMany\" && selectedRows.length === 0}\n        >\n          {t(text.ok)}\n        </Button>,\n      ]}\n    >\n      <PaginatingTableToolbar\n        count={count}\n        first={first}\n        max={max}\n        onNextClick={setFirst}\n        onPreviousClick={setFirst}\n        onPerPageSelect={(first, max) => {\n          setFirst(first);\n          setMax(max);\n        }}\n        inputGroupName={\"search\"}\n        inputGroupOnEnter={(search) => {\n          setFilter(search);\n          setFirst(0);\n          setMax(10);\n          setNavigation([]);\n          setGroupId(undefined);\n        }}\n        inputGroupPlaceholder={t(\"searchForGroups\")}\n      >\n        <Breadcrumb>\n          {navigation.length > 0 && (\n            <BreadcrumbItem key=\"home\">\n              <Button\n                variant=\"link\"\n                onClick={() => {\n                  setGroupId(undefined);\n                  setNavigation([]);\n                  setFirst(0);\n                  setMax(10);\n                }}\n              >\n                {t(\"groups\")}\n              </Button>\n            </BreadcrumbItem>\n          )}\n          {navigation.map((group, i) => (\n            <BreadcrumbItem key={i}>\n              {navigation.length - 1 !== i && (\n                <Button\n                  variant=\"link\"\n                  onClick={() => {\n                    setGroupId(group.id);\n                    setNavigation([...navigation].slice(0, i));\n                    setFirst(0);\n                    setMax(10);\n                  }}\n                >\n                  {group.name}\n                </Button>\n              )}\n              {navigation.length - 1 === i && group.name}\n            </BreadcrumbItem>\n          ))}\n        </Breadcrumb>\n        <DataList aria-label={t(\"groups\")} isCompact>\n          {filter == \"\"\n            ? groups.slice(0, max).map((group: SelectableGroup) => (\n                <GroupRow\n                  key={group.id}\n                  group={group}\n                  isRowDisabled={isRowDisabled}\n                  onSelect={(group) => {\n                    setGroupId(group.id);\n                    setFirst(0);\n                  }}\n                  type={type}\n                  isSearching={filter !== \"\"}\n                  setIsSearching={(boolean) => setFilter(boolean ? \"\" : filter)}\n                  selectedRows={selectedRows}\n                  setSelectedRows={setSelectedRows}\n                  canBrowse={canBrowse}\n                />\n              ))\n            : groups\n                ?.map((g) => deepGroup(g))\n                .map((g) => (\n                  <GroupRow\n                    key={g.id}\n                    group={g}\n                    isRowDisabled={isRowDisabled}\n                    type={type}\n                    isSearching\n                    selectedRows={selectedRows}\n                    setSelectedRows={setSelectedRows}\n                    canBrowse={false}\n                  />\n                ))}\n        </DataList>\n        {groups.length === 0 && filter === \"\" && (\n          <ListEmptyState\n            hasIcon={false}\n            message={t(\"moveGroupEmpty\")}\n            instructions={isMove ? t(\"moveGroupEmptyInstructions\") : undefined}\n          />\n        )}\n        {groups.length === 0 && filter !== \"\" && (\n          <ListEmptyState\n            message={t(\"noSearchResults\")}\n            instructions={t(\"noSearchResultsInstructions\")}\n          />\n        )}\n      </PaginatingTableToolbar>\n    </Modal>\n  );\n};\n\nconst deepGroup = (group: GroupRepresentation): GroupRepresentation => {\n  let result = group;\n  if (group.subGroups?.length === 1) {\n    result = deepGroup(group.subGroups[0]);\n  }\n\n  return result;\n};\n\ntype GroupRowProps = {\n  group: SelectableGroup;\n  type: \"selectOne\" | \"selectMany\";\n  isRowDisabled: (row?: GroupRepresentation) => boolean;\n  isSearching: boolean;\n  setIsSearching?: (value: boolean) => void;\n  onSelect?: (group: GroupRepresentation) => void;\n  selectedRows: SelectableGroup[];\n  setSelectedRows: (groups: SelectableGroup[]) => void;\n  canBrowse: boolean;\n};\n\nconst GroupRow = ({\n  group,\n  type,\n  isRowDisabled,\n  isSearching,\n  setIsSearching,\n  onSelect,\n  selectedRows,\n  setSelectedRows,\n  canBrowse,\n}: GroupRowProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <DataListItem\n      aria-labelledby={group.name}\n      key={group.id}\n      id={group.id}\n      onClick={(e) => {\n        if (type === \"selectOne\") {\n          onSelect?.(group);\n        } else if (\n          (e.target as HTMLInputElement).type !== \"checkbox\" &&\n          group.subGroupCount !== 0\n        ) {\n          onSelect?.(group);\n          setIsSearching?.(false);\n        }\n      }}\n    >\n      <DataListItemRow\n        className={`join-group-dialog-row${\n          isRowDisabled(group) ? \"-m-disabled\" : \"\"\n        }`}\n        data-testid={group.name}\n      >\n        {type === \"selectMany\" && (\n          <DataListCheck\n            className=\"kc-join-group-modal-check\"\n            data-testid={`${group.name}-check`}\n            aria-label={group.name}\n            checked={group.checked}\n            isDisabled={isRowDisabled(group)}\n            onChange={(_event, checked) => {\n              group.checked = checked;\n              let newSelectedRows: SelectableGroup[] = [];\n              if (!group.checked) {\n                newSelectedRows = selectedRows.filter((r) => r.id !== group.id);\n              } else {\n                newSelectedRows = [...selectedRows, group];\n              }\n\n              setSelectedRows(newSelectedRows);\n            }}\n            aria-labelledby={`select-${group.name}`}\n          />\n        )}\n\n        <DataListItemCells\n          dataListCells={[\n            <DataListCell\n              key={`name-${group.id}`}\n              className=\"keycloak-groups-group-path\"\n            >\n              {isSearching ? (\n                <GroupPath id={`select-${group.name}`} group={group} />\n              ) : (\n                <span id={`select-${group.name}`}>{group.name}</span>\n              )}\n            </DataListCell>,\n          ]}\n        />\n        <DataListAction\n          id=\"actions\"\n          aria-labelledby={`select-${group.name}`}\n          aria-label={t(\"groupName\")}\n          isPlainButtonAction\n        >\n          {(canBrowse || type === \"selectOne\") && group.subGroupCount !== 0 && (\n            <Button variant=\"link\" aria-label={t(\"select\")}>\n              <AngleRightIcon />\n            </Button>\n          )}\n        </DataListAction>\n      </DataListItemRow>\n    </DataListItem>\n  );\n};\n"],"names":["DataListAction","_a","children","className","visibility","id","ariaLabel","ariaLabelledBy","isPlainButtonAction","props","__rest","React","css","styles","formatBreakpointMods","DataListCheck","onChange","event","checked","isValid","isDisabled","isChecked","defaultChecked","otherControls","check","GroupPath","path","onMouseEnterProp","tooltip","setTooltip","useState","text","jsx","Tooltip","GroupPickerDialog","type","filterGroups","canBrowse","isMove","onClose","onConfirm","adminClient","useAdminClient","t","useTranslation","selectedRows","setSelectedRows","navigation","setNavigation","groups","setGroups","filter","setFilter","joinedGroups","setJoinedGroups","groupId","setGroupId","max","setMax","first","setFirst","count","setCount","currentGroup","useFetch","group","existingUserGroups","args","selectedGroup","r","isRowDisabled","row","item","Modal","ModalVariant","Button","jsxs","PaginatingTableToolbar","search","Breadcrumb","BreadcrumbItem","i","DataList","GroupRow","boolean","g","deepGroup","ListEmptyState","result","isSearching","setIsSearching","onSelect","DataListItem","e","DataListItemRow","_event","newSelectedRows","DataListItemCells","DataListCell","AngleRightIcon"],"mappings":"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","x_google_ignoreList":[0,1]}